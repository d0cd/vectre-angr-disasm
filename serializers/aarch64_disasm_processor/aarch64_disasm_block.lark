// Grammar for a basic block of AArch64 disassembly (outputted by ANGR)

block: line (_NEWLINE line)*
line: addr ":" op operands? "!"?
operands: _operand ("," _operand)*

_operand: exp | arr
arr: pre_index | post_index
post_index: _arr_base
pre_index: _arr_base "!"
_arr_base: sing_arr | doub_arr | trip_arr
sing_arr: "[" _simple_operand "]"
doub_arr: "[" _simple_operand "," _simple_operand "]"
trip_arr: "[" _simple_operand "," _simple_operand "," op number? "]"
?exp: _simple_operand | _simple_operand ("+"|"-") _simple_operand
_simple_operand: number | reg

addr: HEX_NUMBER
op: /[a-zA-Z]+(\.[a-zA-Z]+)*/
number: "#" "-"? (DEC_NUMBER | HEX_NUMBER)
reg: /[a-zA-Z0-9]+/


DEC_NUMBER: /[0-9]+/
HEX_NUMBER: /0[Xx][0-9a-fA-F][0-9a-fA-F]*/


// Other terminals

_NEWLINE: ( /\r?\n[\t ]*/ )+

%ignore /[\t \f]+/  // WS